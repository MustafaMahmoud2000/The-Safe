Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
                              button.o (__do_copy_data)
c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                              button.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

arr                 0x4               password project.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
LOAD button.o
LOAD DIO.o
LOAD EEPROM.o
LOAD keybad.o
LOAD LCD 8BIT.o
LOAD LED.o
LOAD password project.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5\libm.a
END GROUP
LOAD c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xe36
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0xe button.o
                0x00000092                vButton_init
                0x0000009a                u8Button_read
 .text          0x000000a0      0x6b6 DIO.o
                0x000000a0                vDIO_SET_BIT_DIR
                0x000001c2                vDIO_WRITE_BIT
                0x000002e4                vDIO_TOGGLE_BIT
                0x0000037e                u8DIO_READ_BIT
                0x00000446                vDIO_SET_PORT
                0x00000484                vDIO_WRITE_PORT
                0x000004c2                u8DIO_READ_PORT
                0x00000500                vDIO_TOGGLE_PORT
                0x0000054e                vDIO_PULLUP_CONNECT
                0x00000670                vDIO_WRITE_LOW_NIBBLE
                0x000006d0                vDIO_WRITE_HIGH_NIBBLE
 .text          0x00000756       0x96 EEPROM.o
                0x00000756                EEPROM_WRITE
                0x00000766                EEPROM_READ
                0x00000770                eeprom_readblock_from_address
                0x0000079e                eeprom_writebyte_to_address
                0x000007b4                eeprom_writeblock_from_address
 .text          0x000007ec      0x128 keybad.o
                0x000007ec                keybad_vinit
                0x00000866                keybad_u8read_press
 .text          0x00000914      0x1c4 LCD 8BIT.o
                0x00000942                LCD_SEND_CHAR
                0x0000095a                LCD_SEND_CMD
                0x0000097e                LCD_INIT
                0x00000a64                LCD_clear_screen
                0x00000a78                LCD_SEND_STRING
                0x00000a96                LCD_MOVE_CURSOR
 .text          0x00000ad8       0x1e LED.o
                0x00000ad8                vLed_init
                0x00000ae0                vLed_on
                0x00000ae8                vLed_off
                0x00000af0                vLed_toggle
 .text          0x00000af6      0x33c password project.o
                0x00000af6                main
 .text          0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .text          0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .text          0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                0x00000e32                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
                0x00000e32                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000e32        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
                0x00000e32                _exit
                0x00000e32                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000e32        0x4 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000e36                _etext = .

.data           0x00800060       0x90 load address 0x00000e36
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 button.o
 .data          0x00800060        0x0 DIO.o
 .data          0x00800060        0x0 EEPROM.o
 .data          0x00800060       0x10 keybad.o
 .data          0x00800070        0x0 LCD 8BIT.o
 .data          0x00800070        0x0 LED.o
 .data          0x00800070       0x7f password project.o
 .data          0x008000ef        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .data          0x008000ef        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .data          0x008000ef        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000f0                . = ALIGN (0x2)
 *fill*         0x008000ef        0x1 00
                0x008000f0                _edata = .
                0x008000f0                PROVIDE (__data_end, .)

.bss            0x008000f0        0x5
                0x008000f0                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000f0        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000f0        0x0 button.o
 .bss           0x008000f0        0x0 DIO.o
 .bss           0x008000f0        0x0 EEPROM.o
 .bss           0x008000f0        0x0 keybad.o
 .bss           0x008000f0        0x0 LCD 8BIT.o
 .bss           0x008000f0        0x0 LED.o
 .bss           0x008000f0        0x1 password project.o
                0x008000f0                x
 .bss           0x008000f1        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .bss           0x008000f1        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000f1        0x0 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000f1        0x4 password project.o
                0x008000f1                arr
                0x008000f5                PROVIDE (__bss_end, .)
                0x00000e36                __data_load_start = LOADADDR (.data)
                0x00000ec6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000f5        0x0
                0x008000f5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000f5                PROVIDE (__noinit_end, .)
                0x008000f5                _end = .
                0x008000f5                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x140
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 button.o
 .debug_aranges
                0x00000020       0x20 DIO.o
 .debug_aranges
                0x00000040       0x20 EEPROM.o
 .debug_aranges
                0x00000060       0x20 keybad.o
 .debug_aranges
                0x00000080       0x20 LCD 8BIT.o
 .debug_aranges
                0x000000a0       0x20 LED.o
 .debug_aranges
                0x000000c0       0x20 password project.o
 .debug_aranges
                0x000000e0       0x20 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_aranges
                0x00000100       0x20 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_aranges
                0x00000120       0x20 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x12b9
 *(.debug_info)
 .debug_info    0x00000000       0x9d button.o
 .debug_info    0x0000009d      0x2ef DIO.o
 .debug_info    0x0000038c      0x209 EEPROM.o
 .debug_info    0x00000595       0xc6 keybad.o
 .debug_info    0x0000065b      0x479 LCD 8BIT.o
 .debug_info    0x00000ad4      0x109 LED.o
 .debug_info    0x00000bdd      0x445 password project.o
 .debug_info    0x00001022       0xdd c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_info    0x000010ff       0xdd c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_info    0x000011dc       0xdd c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x619
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x6b button.o
 .debug_abbrev  0x0000006b      0x111 DIO.o
 .debug_abbrev  0x0000017c       0xa4 EEPROM.o
 .debug_abbrev  0x00000220       0x8a keybad.o
 .debug_abbrev  0x000002aa      0x15c LCD 8BIT.o
 .debug_abbrev  0x00000406       0x69 LED.o
 .debug_abbrev  0x0000046f      0x16e password project.o
 .debug_abbrev  0x000005dd       0x14 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_abbrev  0x000005f1       0x14 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_abbrev  0x00000605       0x14 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x992
 *(.debug_line)
 .debug_line    0x00000000       0x3d button.o
 .debug_line    0x0000003d      0x149 DIO.o
 .debug_line    0x00000186      0x12b EEPROM.o
 .debug_line    0x000002b1       0x5d keybad.o
 .debug_line    0x0000030e      0x231 LCD 8BIT.o
 .debug_line    0x0000053f       0x40 LED.o
 .debug_line    0x0000057f      0x26c password project.o
 .debug_line    0x000007eb       0x88 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_exit.o)
 .debug_line    0x00000873       0x91 c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_copy_data.o)
 .debug_line    0x00000904       0x8e c:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.4.1.95/avrtoolchain/bin/../lib/gcc/avr/4.6.2/avr5\libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x32c
 *(.debug_frame)
 .debug_frame   0x00000000       0x34 button.o
 .debug_frame   0x00000034       0xe8 DIO.o
 .debug_frame   0x0000011c       0x64 EEPROM.o
 .debug_frame   0x00000180       0x4c keybad.o
 .debug_frame   0x000001cc       0x90 LCD 8BIT.o
 .debug_frame   0x0000025c       0x54 LED.o
 .debug_frame   0x000002b0       0x7c password project.o

.debug_str      0x00000000      0x3ea
 *(.debug_str)
 .debug_str     0x00000000       0xa4 button.o
 .debug_str     0x000000a4      0x10d DIO.o
                                0x1bc (size before relaxing)
 .debug_str     0x000001b1       0xe1 EEPROM.o
                                0x1c0 (size before relaxing)
 .debug_str     0x00000292       0x3f keybad.o
                                 0xb9 (size before relaxing)
 .debug_str     0x000002d1       0xbc LCD 8BIT.o
                                0x1ab (size before relaxing)
 .debug_str     0x0000038d       0x32 LED.o
                                 0xad (size before relaxing)
 .debug_str     0x000003bf       0x2b password project.o
                                0x1ad (size before relaxing)

.debug_loc      0x00000000      0xc28
 *(.debug_loc)
 .debug_loc     0x00000000       0x4c button.o
 .debug_loc     0x0000004c      0x577 DIO.o
 .debug_loc     0x000005c3       0xd4 EEPROM.o
 .debug_loc     0x00000697      0x10e keybad.o
 .debug_loc     0x000007a5       0xef LCD 8BIT.o
 .debug_loc     0x00000894       0x98 LED.o
 .debug_loc     0x0000092c      0x2fc password project.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(password project.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x20
 .debug_ranges  0x00000000       0x20 password project.o
